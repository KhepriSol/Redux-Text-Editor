{"version":3,"sources":["webpack.config.js"],"names":["HtmlWebpackPlugin","require","WebpackPwaManifest","InjectManifest","module","exports","mode","entry","main","database","editor","header","install","path","resolve","__dirname","plugins","template","swSrc","swDest","fingerprints","short_name","description","background_color","theme_color","start_url","src","destination","join","rules","test","use","exclude","presets","loader","options"],"mappings":"aAAA,IAAMA,kBAAoBC,QAAQ,uBAC5BC,mBAAqBD,QAAQ,wBAD7BD,KAAAA,QAAiB,iBAGIC,QAAQ,0BAA3BE,wBAAAA,eAKRC,OAAOC,QALoBJ,WAMzB,MANME,CAGRG,KAAA,cAKMC,MAAO,CACHC,KAAM,oBAJTH,QAAU,sBACRI,SAAA,uBACGC,OAAA,qBACDC,OAAE,sBAEHC,OAAO,CACPH,SAAU,mBACVC,KAAQG,KAAAC,QAAAC,UAJL,SAFJC,QAAA,CASG,IAAEhB,kBAAA,CACIiB,SAAE,eACJJ,MAAKC,SAEfE,IACIb,eAAIH,CACQkB,MAAE,cACHC,OAAA,cAGPD,IAAOhB,mBADQ,CAEPkB,cAAA,EAERlB,QAAAA,EACAkB,KAAc,2BACNC,WAFW,OAGbC,YAAA,2BACND,iBAJmB,UAKnBC,YAAa,UACbC,UAAkB,IAClBC,WAAa,IACbC,MARmB,CASP,CAERC,IAAAb,KAAAC,QAAA,uBACcA,MAAQ,CAAA,GAAA,IAAA,IAAA,IADtB,IAAA,KAEgBa,YAAed,KAAKe,KAFpC,SAAA,cASRC,OACI,CACIC,MAAM,CACA,CAEVA,KAAA,UACUC,IADV,CAAA,eAAA,eAGS,CACOD,KAAA,UACDE,QAAE,eACLC,IAAU,CACAC,OAAA,eAFLC,QAAA,CAFRF,QAAA,CAAA,qBARNjB,QAAA,CAAA,4CAAA","file":"webpack.config.min.js","sourcesContent":["const HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst WebpackPwaManifest = require('webpack-pwa-manifest');\r\nconst path = require('path');\r\nconst { InjectManifest } = require('workbox-webpack-plugin');\r\n\r\n// TODO: Add and configure workbox plugins for a service worker and manifest file.\r\n// TODO: Add CSS loaders and babel to webpack.\r\n\r\nmodule.exports = function getConfig() {\r\n  return {\r\n      mode: 'development',\r\n      entry: {\r\n          main: './src/js/index.js',\r\n          install: './src/js/install.js',\r\n          database: './src/js/database.js',\r\n          editor: './src/js/editor.js',\r\n          header: './src/js/header.js',\r\n      },\r\n      output: {\r\n          filename: '[name].bundle.js',\r\n          path: path.resolve(__dirname, 'dist'),\r\n      },\r\n      plugins: [\r\n          new HtmlWebpackPlugin({\r\n              template: './index.html',\r\n              title: 'JATE'\r\n          }),\r\n          new InjectManifest({\r\n              swSrc: './src-sw.js',\r\n              swDest: 'src-sw.js',\r\n          }),\r\n          new WebpackPwaManifest({\r\n              fingerprints: false,\r\n              inject: true,\r\n              name: 'Just Another Text Editor',\r\n              short_name: 'JATE',\r\n              description: 'Just another text editor',\r\n              background_color: '#225ca3',\r\n              theme_color: '#225ca3',\r\n              start_url: '/',\r\n              publicPath: '/',\r\n              icons: [\r\n                  {\r\n                      src: path.resolve('src/images/logo.png'),\r\n                      sizes: [96, 128, 192, 256, 384, 512],\r\n                      destination: path.join('assets', 'icons'),\r\n                  },\r\n              ],\r\n          }),\r\n      ],\r\n      module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.css$/i,\r\n                  use: ['style-loader', 'css-loader'],\r\n              },\r\n              {\r\n                  test: /\\.m?js$/,\r\n                  exclude: /node_modules/,\r\n                  use: {\r\n                      loader: 'babel-loader',\r\n                      options: {\r\n                          presets: ['@babel/preset-env'],\r\n                          plugins: ['@babel/plugin-proposal-object-rest-spread', '@babel/transform-runtime'],\r\n                      },\r\n                  },\r\n              },\r\n          ],\r\n      },\r\n  };\r\n};"]}