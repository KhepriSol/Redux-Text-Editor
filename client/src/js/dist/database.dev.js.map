{"version":3,"sources":["database.js"],"names":["initdb","upgrade","db","objectStoreNames","contains","console","log","createObjectStore","keyPath","autoIncrement","putDb","content","contactDb","tx","transaction","store","objectStore","request","put","id","value","result","getDb","error"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2CACb,iBAAO,MAAP,EAAe,CAAf,EAAkB;AAChBC,YAAAA,OADgB,mBACRC,EADQ,EACJ;AACV,kBAAIA,EAAE,CAACC,gBAAH,CAAoBC,QAApB,CAA6B,MAA7B,CAAJ,EAA0C;AACxCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA;AACD;;AACDJ,cAAAA,EAAE,CAACK,iBAAH,CAAqB,MAArB,EAA6B;AAAEC,gBAAAA,OAAO,EAAE,IAAX;AAAiBC,gBAAAA,aAAa,EAAE;AAAhC,eAA7B;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AARe,WAAlB,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf,C,CAYA;;;AACO,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBN,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AADmB;AAAA,0CAEK,iBAAO,MAAP,EAAe,CAAf,CAFL;;AAAA;AAEbM,UAAAA,SAFa;AAGbC,UAAAA,EAHa,GAGRD,SAAS,CAACE,WAAV,CAAsB,MAAtB,EAA8B,WAA9B,CAHQ;AAIbC,UAAAA,KAJa,GAILF,EAAE,CAACG,WAAH,CAAe,MAAf,CAJK;AAKbC,UAAAA,OALa,GAKHF,KAAK,CAACG,GAAN,CAAU;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,KAAK,EAAET;AAAhB,WAAV,CALG;AAAA;AAAA,0CAMEM,OANF;;AAAA;AAMbI,UAAAA,MANa;AAOnBhB,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+Ce,MAA/C;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd,C,CAUP;;;;;AACO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAYjB,OAAO,CAACkB,KAAR,CAAc,uBAAd,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;;AAEPvB,MAAM","sourcesContent":["import { openDB } from 'idb';\r\n\r\nconst initdb = async () =>\r\n  openDB('jate', 1, {\r\n    upgrade(db) {\r\n      if (db.objectStoreNames.contains('jate')) {\r\n        console.log('jate database already exists');\r\n        return;\r\n      }\r\n      db.createObjectStore('jate', { keyPath: 'id', autoIncrement: true });\r\n      console.log('jate database created');\r\n    },\r\n  });\r\n\r\n//creating a connection, specifying privileges, opening the store, adding content, and confirming the request.\r\nexport const putDb = async (content)  => {\r\n  console.log('PUT DataBase');\r\n  const contactDb = await openDB('jate', 1);\r\n  const tx = contactDb.transaction('jate', 'readwrite');\r\n  const store = tx.objectStore('jate');\r\n  const request = store.put({ id: 1, value: content });\r\n  const result = await request;\r\n  console.log('ðŸš€ - data saved to the database', result);\r\n};\r\n\r\n// TODO: Add logic for a method that gets all the content from the database\r\nexport const getDb = async () => console.error('getDb not implemented');\r\n\r\ninitdb();\r\n"],"file":"database.dev.js"}