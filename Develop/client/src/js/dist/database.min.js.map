{"version":3,"sources":["database.js"],"names":["_idb","require","initdb","regeneratorRuntime","async","_context","prev","next","abrupt","openDB","upgrade","db","objectStoreNames","contains","console","log","keyPath","autoIncrement","stop","content","contactDb","tx","store","request","result","_context2","awrap","sent","transaction","objectStore","put","id","value","createObjectStore","getDb","_context3","error"],"mappings":"uGAAA,IAAAA,KAAAC,QAAA,OAEMC,OAAS,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAG,OAAA,UACb,EAAAR,KAAAS,QAAO,OAAQ,EAAG,CAChBC,QADgB,SACRC,GACFA,EAAGC,iBAAiBC,SAAS,QAC/BC,QAAQC,IAAI,iCAJdb,EAAAA,kBAAAA,OAAS,CAAAc,QAAA,KAAAC,eAAA,IAAAH,QAAAC,IAAA,8BAAA,KAAA,EAAA,IAAA,MAAA,OAAAV,EAAAa,WAEXR,MADgB,SAAAS,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAEdO,QAAAC,IAAA,gBAFcU,EAAAlB,KAAA,EAAAJ,mBAAAuB,OAGJX,EAAAA,KAAAA,QAAI,OAAA,IAHA,KAAA,EAAA,OAGZD,EAHYW,EAAAE,KAIZN,EAAAD,EAAAQ,YAAA,OAAA,aACDN,EAAAD,EAAAQ,YAAA,QAYCN,EAAUD,EAAMQ,IAAI,CAAEC,GAAI,EAAGC,MAAOb,IAjBxBM,EAAAlB,KAAA,EAAAJ,mBAAAuB,MAMXO,GANW,KAAA,EAMdtB,EANcc,EAAAE,KAMiBX,QAAAA,IAAAA,kCAAFQ,GANf,KAAA,GAAA,IAAA,MAAA,OAAAC,EAAAP,+BAQf,IAAAgB,MAAA,WAAA,OAAA/B,mBAAAC,MAAA,SAAA+B,GAAA,OAAA,OAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAAA,OAAA4B,EAAA3B,OAAA,SAAAM,QAAAsB,MAAA,0BAAA,KAAA,EAAA,IAAA,MAAA,OAAAD,EAAAjB,+BAiBLhB","file":"database.min.js","sourcesContent":["import { openDB } from 'idb';\r\n\r\nconst initdb = async () =>\r\n  openDB('jate', 1, {\r\n    upgrade(db) {\r\n      if (db.objectStoreNames.contains('jate')) {\r\n        console.log('jate database already exists');\r\n        return;\r\n      }\r\n      db.createObjectStore('jate', { keyPath: 'id', autoIncrement: true });\r\n      console.log('jate database created');\r\n    },\r\n  });\r\n\r\n//creating a connection, specifying privileges, opening the store, adding content, and confirming the request.\r\nexport const putDb = async (content)  => {\r\n  console.log('PUT DataBase');\r\n  const contactDb = await openDB('jate', 1);\r\n  const tx = contactDb.transaction('jate', 'readwrite');\r\n  const store = tx.objectStore('jate');\r\n  const request = store.put({ id: 1, value: content });\r\n  const result = await request;\r\n  console.log('ðŸš€ - data saved to the database', result);\r\n};\r\n\r\n// TODO: Add logic for a method that gets all the content from the database\r\nexport const getDb = async () => console.error('getDb not implemented');\r\n\r\ninitdb();\r\n"]}